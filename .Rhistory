# SuperFastPython.com
# execute tasks sequentially in a for loop
# https://superfastpython.com/multiprocessing-for-loop/
# SuperFastPython.com
# execute tasks in parallel in a for loop
from time import sleep
from random import random
from multiprocessing import Process
import time
start_time = time.time()
# execute a task
def task(arg):
# generate a random value between 0 and 1
value = random()
# block for a fraction of a second
sleep(value)
# report a message
print(f'.done {arg}, generated {value}', flush=True)
# protect the entry point
if __name__ == '__main__':
# create all tasks
processes = [Process(target=task, args=(i,)) for i in range(20)]
# start all processes
for process in processes:
process.start()
# wait for all processes to complete
for process in processes:
process.join()
# report that all tasks are completed
print('Done', flush=True)
end_time = time.time()
print(round(end_time - start_time,2))
# SuperFastPython.com
# execute tasks sequentially in a for loop
# https://superfastpython.com/multiprocessing-for-loop/
# SuperFastPython.com
# execute tasks in parallel in a for loop
from time import sleep
from random import random
from multiprocessing import Process
import time
start_time = time.time()
# execute a task
def task(arg):
# generate a random value between 0 and 1
value = random()
# block for a fraction of a second
sleep(value)
# report a message
print(f'.done {arg}, generated {value}', flush=True)
# protect the entry point
if __name__ == '__main__':
# create all tasks
processes = [Process(target=task, args=(i,)) for i in range(20)]
# start all processes
for process in processes:
process.start()
# wait for all processes to complete
for process in processes:
process.join()
# report that all tasks are completed
print('Done', flush=True)
end_time = time.time()
print(round(end_time - start_time,2))
library(tidyverse)
options(scipen=999)
df <- read_excel(paste0("/Users/jonathanlatner/Downloads/Task Ratings.xlsx"),sep = ";")
library(readxl)
df <- read_excel(paste0("/Users/jonathanlatner/Downloads/Task Ratings.xlsx"),sep = ";")
df <- read_excel(paste0("/Users/jonathanlatner/Downloads/Task Ratings.xlsx"))
df
View(df)
reticulate::repl_python()
remove.packages("rstan")
if (file.exists(".RData")) file.remove(".RData")
install.packages("brms")
install.packages("brms",dependencies = TRUE)
install.packages("rstan",dependencies = TRUE)
library(rstan)
example(stan_model, package = "rstan", run.dontrun = TRUE)
# Detach if loaded
if ("bayesintro" %in% (.packages())) {
detach(package:bayesintro, unload = TRUE)
}
# Uninstall if installed
if ("bayesintro" %in% installed.packages()) {
remove.packages("bayesintro")
}
# Install if not installed
if (!("devtools" %in% installed.packages())) {
install.packages("devtools")
}
# Load from GitHub
library(devtools)
devtools::install_github("denis-cohen/bayesintro")
# Load to library
library(bayesintro)
learnr::run_tutorial("00-00-int", package = "bayesintro")
learnr::run_tutorial("01-01-lec", package = "bayesintro")
# Load to library
library(bayesintro)
# Run tutorials (one at a time)
# learnr::run_tutorial("00-00-int", package = "bayesintro")
# learnr::run_tutorial("01-01-lec", package = "bayesintro")
# learnr::run_tutorial("01-02-lec", package = "bayesintro")
learnr::run_tutorial("01-03-lab", package = "bayesintro")
# Run tutorials (one at a time)
# learnr::run_tutorial("00-00-int", package = "bayesintro")
# learnr::run_tutorial("01-01-lec", package = "bayesintro")
# learnr::run_tutorial("01-02-lec", package = "bayesintro")
learnr::run_tutorial("01-03-lab", package = "bayesintro")
library(bayesintro)
# Run tutorials (one at a time)
# learnr::run_tutorial("00-00-int", package = "bayesintro")
# learnr::run_tutorial("01-01-lec", package = "bayesintro")
# learnr::run_tutorial("01-02-lec", package = "bayesintro")
learnr::run_tutorial("01-03-lab", package = "bayesintro")
# Top commands ----
# Create emp# Top commands ----
# Create empty R application (no figures, data frames, packages, etc.)
# https://stackoverflow.com/questions/7505547/detach-all-packages-while-working-in-r
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
rm(list=ls(all=TRUE))
# load library
library(tidyverse)
library(estimatr) # lm_robust
library(broom) # tidy
library(gridExtra)
# FOLDERS - ADAPT THIS PATHWAY
setwd("/Users/jonathanlatner/Documents/GitHub/mincome_calnitsky_latner_2017/")
data_files = "data_files/"
tables = "tables/"
options(scipen=999)
# Load data ----
df_mincome <- readRDS(paste0(data_files, "mincome_balanced.rds"))
df_mincome
# Top commands ----
# Create emp# Top commands ----
# Create empty R application (no figures, data frames, packages, etc.)
# https://stackoverflow.com/questions/7505547/detach-all-packages-while-working-in-r
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
rm(list=ls(all=TRUE))
# load library
library(tidyverse)
library(estimatr) # lm_robust
library(broom) # tidy
library(gridExtra)
# FOLDERS - ADAPT THIS PATHWAY
setwd("/Users/jonathanlatner/Documents/GitHub/mincome_calnitsky_latner_2017/")
data_files = "data_files/"
tables = "tables/"
options(scipen=999)
# Load data ----
df_mincome <- readRDS(paste0(data_files, "mincome_balanced.rds"))
# Clean data ----
# sitetreat_3 1 "MB control"
# sitetreat_3 2 "Dauphin"
# sitetreat_3 3 "Rural treatment"
df_mincome <- df_mincome %>%
filter(!is.na(period)) %>%
filter(!is.na(sitetreat_3)) %>%
mutate(sitetreat_3=as.factor(sitetreat_3),
) %>%
select(famno, sitetreat_3, lmp, period, month)
df_mincome
