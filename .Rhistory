sec.axis = sec_axis(~./10, name="Temporary employment (%)")
) +
geom_text(aes(label=paste("r = ", cor)),
size = 3,
check_overlap = TRUE,
inherit.aes = FALSE,
show.legend = FALSE,
x=-Inf, y=Inf, hjust=-0.2, vjust=1.2)+
theme(panel.grid.minor = element_blank(),
axis.line.y = element_line(color="black", size=.5),
axis.line.x = element_line(color="black", size=.5),
legend.title=element_blank(),
legend.key.width = unit(2,"cm"),
legend.position = "bottom"
)
ggsave(filename = paste0(graphs,"graph_eplP_tempP.pdf"), plot = last_plot(), height = 8, width = 12, units = "in")
# Graphs the relationship between EPL (gap) and temporary employment
df_graph <- df_merge_diff
ggplot(data = df_graph, aes(x = year)) +
facet_wrap(~region+country_name,scales = "free_y") +
geom_line(aes(y=epl_gap, color = "EPL gap")) +
geom_line(aes(y=temp/10, color = "Temp emp")) +
theme_bw() +
scale_color_manual(values = c("blue", "orange")) +
scale_y_continuous(
name = "EPL gap",
sec.axis = sec_axis(~./10, name="Temporary employment (%)")
) +
geom_text(aes(label=paste("r = ", cor)),
size = 3,
check_overlap = TRUE,
inherit.aes = FALSE,
show.legend = FALSE,
x=-Inf, y=Inf, hjust=-0.2, vjust=1.2)+
theme(panel.grid.minor = element_blank(),
axis.line.y = element_line(color="black", size=.5),
axis.line.x = element_line(color="black", size=.5),
legend.title=element_blank(),
legend.key.width = unit(2,"cm"),
legend.position = "bottom"
)
ggsave(filename = paste0(graphs,"graph_eplG_tempP.pdf"), plot = last_plot(), height = 8, width = 12, units = "in")
df_epl <- rbind(df_epl_p,df_epl_t)
names(df_epl) <- tolower(names(df_epl))
df_epl <- df_epl %>%
filter(series == "EPRC_V1" | series == "EPT_V1") %>%
select(country,obstime,obsvalue,series) %>%
rename(year=obstime,
epl=obsvalue) %>%
mutate(year = as.numeric(year)) %>%
mutate(series = ifelse(series == "EPRC_V1", yes = "perm_epl", no = "temp_epl")) %>%
filter(year>=1990)
# Estimate EPL gap, similar to Passaretta and Wolbers, 2019
# According to footnote 9, negatives values are imputed to 0
# Yet more than 25% of all values are less than 0
df_epl_diff <- pivot_wider(df_epl,names_from = series,values_from = epl)
df_epl_diff$epl_gap <- with(df_epl_diff,perm_epl-temp_epl)
df_epl_diff <- df_epl_diff[complete.cases(df_epl_diff),]
# Clean Temp data ----
names(df_temp_0) <- tolower(names(df_temp_0))
df_temp_1 <- df_temp_0 %>%
filter(sex == "MW", # men and women
series == "PER_CENT_TEMP", # percent temporary
age == "900000", # all workers
) %>%
select(-series) %>%
rename(year=obstime,
temp=obsvalue) %>%
mutate(year = as.numeric(year)) %>%
filter(year>=1990)
# Merge data ----
df_merge <- merge(df_epl, df_temp_1, by = c("country","year"), all.x = TRUE)
df_merge$country_name <- countrycode(df_merge$country, 'genc3c', 'country.name')
df_merge <- merge(df_merge,geography,all.y = TRUE)
df_merge <- df_merge %>%
arrange(country,series,year)
df_merge_diff <- merge(df_epl_diff, df_temp_1, by = c("country","year"), all.x = TRUE)
df_merge_diff$country_name <- countrycode(df_merge_diff$country, 'genc3c', 'country.name')
df_merge_diff <- merge(df_merge_diff,geography,all.y = TRUE)
df_merge_diff <- df_merge_diff %>%
arrange(country,year)
# Clean data ----
df_merge <- df_merge %>%
filter(!is.na(temp)) %>% # countries must have temporary employment rate
group_by(country,series) %>%
mutate(sum = row_number(),
sum = last(sum)) %>%
mutate(cor = round(cor(epl,temp),3)) %>% # estimate correlation
ungroup() %>%
filter(sum>2) %>% # countries must have at least 3 observations
select(-sum)
df_merge <- droplevels(df_merge)
df_merge_diff <- df_merge_diff %>%
filter(!is.na(temp)) %>% # countries must have temporary employment rate
group_by(country) %>%
mutate(sum = row_number(),
sum = last(sum)) %>%
mutate(cor = round(cor(epl_gap,temp),3)) %>% # estimate correlation
ungroup() %>%
filter(sum>2) %>% # countries must have at least 3 observations
select(-sum)
df_merge_diff <- droplevels(df_merge_diff)
# Graph ----
# Graphs the relationship between EPL (temp) and temporary employment
df_graph <- df_merge %>%
filter(series == "temp_epl")
ggplot(data = df_graph, aes(x = year)) +
facet_wrap(~region+country_name,scales = "free_y") +
geom_line(aes(y=epl, color = "EPL")) +
geom_line(aes(y=temp/10, color = "Temp emp")) +
theme_bw() +
scale_color_manual(values = c("blue", "orange")) +
scale_y_continuous(
name = "EPL (Temporary employment)",
sec.axis = sec_axis(~./10, name="Temporary employment (%)")
) +
geom_text(aes(label=paste("r = ", cor)),
size = 3,
check_overlap = TRUE,
inherit.aes = FALSE,
show.legend = FALSE,
x=-Inf, y=Inf, hjust=-0.2, vjust=1.2)+
theme(panel.grid.minor = element_blank(),
axis.line.y = element_line(color="black", size=.5),
axis.line.x = element_line(color="black", size=.5),
legend.title=element_blank(),
legend.key.width = unit(2,"cm"),
legend.position = "bottom"
)
ggsave(filename = paste0(graphs,"graph_eplT_tempA.pdf"), plot = last_plot(), height = 8, width = 12, units = "in")
# Graphs the relationship between EPL (perm) and temporary employment
df_graph <- df_merge %>%
filter(series == "perm_epl")
ggplot(data = df_graph, aes(x = year)) +
facet_wrap(~region+country_name,scales = "free_y") +
geom_line(aes(y=epl, color = "EPL")) +
geom_line(aes(y=temp/10, color = "Temp emp")) +
theme_bw() +
scale_color_manual(values = c("blue", "orange")) +
scale_y_continuous(
name = "EPL (Permanent employment)",
sec.axis = sec_axis(~./10, name="Temporary employment (%)")
) +
geom_text(aes(label=paste("r = ", cor)),
size = 3,
check_overlap = TRUE,
inherit.aes = FALSE,
show.legend = FALSE,
x=-Inf, y=Inf, hjust=-0.2, vjust=1.2)+
theme(panel.grid.minor = element_blank(),
axis.line.y = element_line(color="black", size=.5),
axis.line.x = element_line(color="black", size=.5),
legend.title=element_blank(),
legend.key.width = unit(2,"cm"),
legend.position = "bottom"
)
ggsave(filename = paste0(graphs,"graph_eplP_tempA.pdf"), plot = last_plot(), height = 8, width = 12, units = "in")
df_graph <- df_merge_diff
# Graphs the relationship between EPL (gap) and temporary employment
ggplot(data = df_graph, aes(x = year)) +
facet_wrap(~region+country_name,scales = "free_y") +
geom_line(aes(y=epl_gap, color = "EPL gap")) +
geom_line(aes(y=temp/10, color = "Temp emp")) +
theme_bw() +
scale_color_manual(values = c("blue", "orange")) +
scale_y_continuous(
name = "EPL gap",
sec.axis = sec_axis(~./10, name="Temporary employment (%)")
) +
geom_text(aes(label=paste("r = ", cor)),
size = 3,
check_overlap = TRUE,
inherit.aes = FALSE,
show.legend = FALSE,
x=-Inf, y=Inf, hjust=-0.2, vjust=1.2)+
theme(panel.grid.minor = element_blank(),
axis.line.y = element_line(color="black", size=.5),
axis.line.x = element_line(color="black", size=.5),
legend.title=element_blank(),
legend.key.width = unit(2,"cm"),
legend.position = "bottom"
)
ggsave(filename = paste0(graphs,"graph_eplG_tempA.pdf"), plot = last_plot(), height = 8, width = 12, units = "in")
# Top commands ----
# Create emp# Top commands ----
# Create empty R application (no figures, data frames, packages, etc.)
# https://stackoverflow.com/questions/7505547/detach-all-packages-while-working-in-r
detachAllPackages <- function() {
basic.packages <- c("package:stats","package:graphics","package:grDevices","package:utils","package:datasets","package:methods","package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:",search()))==1,TRUE,FALSE)]
package.list <- setdiff(package.list,basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)
}
detachAllPackages()
rm(list=ls(all=TRUE))
# load library
library(tidyverse)
library(estimatr) # lm_robust
library(broom) # tidy
library(gridExtra)
library(Cairo)
# FOLDERS - ADAPT THIS PATHWAY
setwd("/Users/jonathanlatner/Documents/GitHub/mincome_1/")
data_files = "data_files/"
tables = "tables/"
options(scipen=999)
# Load data ----
df_mincome <- readRDS(paste0(data_files, "mincome_balanced.rds"))
# Clean data ----
# sitetreat_3 1 "MB control"
# sitetreat_3 2 "Dauphin"
# sitetreat_3 3 "Rural treatment"
df_mincome <- df_mincome %>%
filter(!is.na(period)) %>%
filter(!is.na(sitetreat_3)) %>%
mutate(sitetreat_3=as.factor(sitetreat_3),
) %>%
select(famno, sitetreat_3, lmp, period, month)
table(df_mincome$sitetreat_3)
# Difference in difference ----
# Baseline
model_mb_0 <- lm_robust(lmp~relevel(as.factor(period), ref = "0"),data=subset(df_mincome, sitetreat_3 == 1), se_type = "stata")
model_da_0 <- lm_robust(lmp~relevel(as.factor(period), ref = "0"),data=subset(df_mincome, sitetreat_3 == 2), se_type = "stata")
model_ru_0 <- lm_robust(lmp~relevel(as.factor(period), ref = "0"),data=subset(df_mincome, sitetreat_3 == 3), se_type = "stata")
# Study period
model_mb_1 <- lm_robust(lmp~relevel(as.factor(period), ref = "1"),data=subset(df_mincome, sitetreat_3 == 1), se_type = "stata")
model_da_1 <- lm_robust(lmp~relevel(as.factor(period), ref = "1"),data=subset(df_mincome, sitetreat_3 == 2), se_type = "stata")
model_ru_1 <- lm_robust(lmp~relevel(as.factor(period), ref = "1"),data=subset(df_mincome, sitetreat_3 == 3), se_type = "stata")
# diff 1: experimental effect (baseline)
model_diff_1_exp_0 <- lm_robust(lmp~sitetreat_3,data=subset(df_mincome, period == 0 & (sitetreat_3 == 1 | sitetreat_3 == 2)), se_type = "stata")
# diff 1: experimental effect (study period)
model_diff_1_exp_1 <- lm_robust(lmp~sitetreat_3,data=subset(df_mincome, period == 1 & (sitetreat_3 == 1 | sitetreat_3 == 2)), se_type = "stata")
# diff 1: experimental effect (change)
model_diff_1_exp_change <- lm_robust(lmp~sitetreat_3 + period + sitetreat_3:period,data=subset(df_mincome, (sitetreat_3 == 1 | sitetreat_3 == 2)), se_type = "stata")
# diff 1: community effect (baseline)
model_diff_2_com_0 <- lm_robust(lmp~sitetreat_3,data=subset(df_mincome, period == 0 & (sitetreat_3 == 2 | sitetreat_3 == 3)), se_type = "stata")
# diff 2: community effect (study period)
model_diff_2_com_1 <- lm_robust(lmp~sitetreat_3,data=subset(df_mincome, period == 1 & (sitetreat_3 == 2 | sitetreat_3 == 3)), se_type = "stata")
# diff 1: community effect (change)
model_diff_2_com_change <- lm_robust(lmp~sitetreat_3 + period + sitetreat_3:period,data=subset(df_mincome, (sitetreat_3 == 2 | sitetreat_3 == 3)), se_type = "stata")
# Extract coefficients (b, se, p) ----
# Baseline
table_mb_0 <- tidy(model_mb_0) %>%
select(term, estimate, std.error, p.value) %>%
filter(row_number()==1)
table_da_0 <- tidy(model_da_0) %>%
select(term, estimate, std.error, p.value) %>%
filter(row_number()==1)
table_ru_0 <- tidy(model_ru_0) %>%
select(term, estimate, std.error, p.value) %>%
filter(row_number()==1)
table_diff_1_exp_0 <- tidy(model_diff_1_exp_0) %>%
select(term, estimate, std.error, p.value) %>%
filter(row_number()==2)
table_diff_2_com_0 <- tidy(model_diff_2_com_0) %>%
select(term, estimate, std.error, p.value) %>%
filter(row_number()==2)
# Study period
table_mb_1 <- tidy(model_mb_1) %>%
select(term, estimate, std.error, p.value) %>%
filter(row_number()==1)
table_da_1 <- tidy(model_da_1) %>%
select(term, estimate, std.error, p.value) %>%
filter(row_number()==1)
table_ru_1 <- tidy(model_ru_1) %>%
select(term, estimate, std.error, p.value) %>%
filter(row_number()==1)
table_diff_1_exp_1 <- tidy(model_diff_1_exp_1) %>%
select(term, estimate, std.error, p.value) %>%
filter(row_number()==2)
table_diff_2_com_1 <- tidy(model_diff_2_com_1) %>%
select(term, estimate, std.error, p.value) %>%
filter(row_number()==2)
# Change in LMP
table_mb_change <- tidy(model_mb_0) %>%
select(term, estimate, std.error, p.value) %>%
filter(row_number()==2)
table_da_change <- tidy(model_da_0) %>%
select(term, estimate, std.error, p.value) %>%
filter(row_number()==2)
table_ru_change <- tidy(model_ru_0) %>%
select(term, estimate, std.error, p.value) %>%
filter(row_number()==2)
table_diff_1_exp_change <- tidy(model_diff_1_exp_change) %>%
select(term, estimate, std.error, p.value) %>%
filter(row_number()==4)
table_diff_2_com_change <- tidy(model_diff_2_com_change) %>%
select(term, estimate, std.error, p.value) %>%
filter(row_number()==4)
rm(list=ls(pattern="model_"))
# Create column for MB Control ----
table_mb_0$term[1] <- "LMP baseline"
table_mb_0$order <- "b"
table_mb_1$term[1] <- "LMP study period"
table_mb_1$order <- "b"
table_mb_change$term[1] <- "Change in LMP"
table_mb_change$order <- "b"
table_mb_0_se <- table_mb_0 %>%
select(term,std.error) %>%
mutate(order = "se") %>%
rename(estimate = std.error)
table_mb_1_se <- table_mb_1 %>%
select(term,std.error) %>%
mutate(order = "se") %>%
rename(estimate = std.error)
table_mb_change_se <- table_mb_change %>%
select(term,std.error) %>%
mutate(order = "se") %>%
rename(estimate = std.error)
df_mb_control <- bind_rows(table_mb_0, table_mb_0_se, table_mb_1, table_mb_1_se, table_mb_change, table_mb_change_se)
df_mb_control$term <- factor(df_mb_control$term, levels = c("LMP baseline", "LMP study period", "Change in LMP"))
df_mb_control <- df_mb_control %>%
arrange(term, order) %>%
select(term, order, estimate, p.value) %>%
mutate(across(where(is.numeric), round, 5)) %>%
rename(estimate_mb = estimate,
pvalue_mb = p.value)
df_mb_control
rm(list=ls(pattern="table_mb"))
# Create column for Dauphin ----
table_da_0$term[1] <- "LMP baseline"
table_da_0$order <- "b"
table_da_1$term[1] <- "LMP study period"
table_da_1$order <- "b"
table_da_change$term[1] <- "Change in LMP"
table_da_change$order <- "b"
table_da_0_se <- table_da_0 %>%
select(term,std.error) %>%
mutate(order = "se") %>%
rename(estimate = std.error)
table_da_1_se <- table_da_1 %>%
select(term,std.error) %>%
mutate(order = "se") %>%
rename(estimate = std.error)
table_da_change_se <- table_da_change %>%
select(term,std.error) %>%
mutate(order = "se") %>%
rename(estimate = std.error)
df_da_treatment <- bind_rows(table_da_0, table_da_0_se, table_da_1, table_da_1_se, table_da_change, table_da_change_se)
df_da_treatment$term <- factor(df_da_treatment$term, levels = c("LMP baseline", "LMP study period", "Change in LMP"))
df_da_treatment <- df_da_treatment %>%
arrange(term, order) %>%
select(term, order, estimate, p.value) %>%
mutate(across(where(is.numeric), round, 5)) %>%
rename(estimate_da = estimate,
pvalue_da = p.value)
df_da_treatment
rm(list=ls(pattern="table_da"))
# Create column for MB Treatment (rural) ----
table_ru_0$term[1] <- "LMP baseline"
table_ru_0$order <- "b"
table_ru_1$term[1] <- "LMP study period"
table_ru_1$order <- "b"
table_ru_change$term[1] <- "Change in LMP"
table_ru_change$order <- "b"
table_ru_0_se <- table_ru_0 %>%
select(term,std.error) %>%
mutate(order = "se") %>%
rename(estimate = std.error)
table_ru_1_se <- table_ru_1 %>%
select(term,std.error) %>%
mutate(order = "se") %>%
rename(estimate = std.error)
table_ru_change_se <- table_ru_change %>%
select(term,std.error) %>%
mutate(order = "se") %>%
rename(estimate = std.error)
df_ru_treatment <- bind_rows(table_ru_0, table_ru_0_se, table_ru_1, table_ru_1_se, table_ru_change, table_ru_change_se)
df_ru_treatment$term <- factor(df_ru_treatment$term, levels = c("LMP baseline", "LMP study period", "Change in LMP"))
df_ru_treatment <- df_ru_treatment %>%
arrange(term, order) %>%
select(term, order, estimate, p.value) %>%
mutate(across(where(is.numeric), round, 5)) %>%
rename(estimate_ru = estimate,
pvalue_ru = p.value)
rm(list=ls(pattern="table_ru"))
# Create column for Diff 1: experimental ----
table_diff_1_exp_0$term[1] <- "LMP baseline"
table_diff_1_exp_0$order <- "b"
table_diff_1_exp_1$term[1] <- "LMP study period"
table_diff_1_exp_1$order <- "b"
table_diff_1_exp_change$term[1] <- "Change in LMP"
table_diff_1_exp_change$order <- "b"
table_diff_1_exp_0_se <- table_diff_1_exp_0 %>%
select(term,std.error) %>%
mutate(order = "se") %>%
rename(estimate = std.error)
table_diff_1_exp_1_se <- table_diff_1_exp_1 %>%
select(term,std.error) %>%
mutate(order = "se") %>%
rename(estimate = std.error)
table_diff_1_exp_change_se <- table_diff_1_exp_change %>%
select(term,std.error) %>%
mutate(order = "se") %>%
rename(estimate = std.error)
df_diff_1_exp_control <- bind_rows(table_diff_1_exp_0, table_diff_1_exp_0_se, table_diff_1_exp_1, table_diff_1_exp_1_se, table_diff_1_exp_change, table_diff_1_exp_change_se)
df_diff_1_exp_control$term <- factor(df_diff_1_exp_control$term, levels = c("LMP baseline", "LMP study period", "Change in LMP"))
df_diff_1_exp_control <- df_diff_1_exp_control %>%
arrange(term, order) %>%
select(term, order, estimate, p.value) %>%
mutate(across(where(is.numeric), round, 5)) %>%
rename(estimate_diff_1_exp = estimate,
pvalue_diff_1_exp = p.value)
df_diff_1_exp_control
rm(list=ls(pattern="table_diff_1_exp"))
# Create column for Diff 2: community ----
table_diff_2_com_0$term[1] <- "LMP baseline"
table_diff_2_com_0$order <- "b"
table_diff_2_com_1$term[1] <- "LMP study period"
table_diff_2_com_1$order <- "b"
table_diff_2_com_change$term[1] <- "Change in LMP"
table_diff_2_com_change$order <- "b"
table_diff_2_com_0_se <- table_diff_2_com_0 %>%
select(term,std.error) %>%
mutate(order = "se") %>%
rename(estimate = std.error)
table_diff_2_com_1_se <- table_diff_2_com_1 %>%
select(term,std.error) %>%
mutate(order = "se") %>%
rename(estimate = std.error)
table_diff_2_com_change_se <- table_diff_2_com_change %>%
select(term,std.error) %>%
mutate(order = "se") %>%
rename(estimate = std.error)
df_diff_2_com_control <- bind_rows(table_diff_2_com_0, table_diff_2_com_0_se, table_diff_2_com_1, table_diff_2_com_1_se, table_diff_2_com_change, table_diff_2_com_change_se)
df_diff_2_com_control$term <- factor(df_diff_2_com_control$term, levels = c("LMP baseline", "LMP study period", "Change in LMP"))
df_diff_2_com_control <- df_diff_2_com_control %>%
arrange(term, order) %>%
select(term, order, estimate, p.value) %>%
mutate(across(where(is.numeric), round, 5)) %>%
rename(estimate_diff_2_com = estimate,
pvalue_diff_2_com = p.value)
rm(list=ls(pattern="table_diff_2_com"))
# Create results table ----
# please note: results differ slightly due to coding error in original paper
# see "error note" in 02_clean.R file
df_results <- merge(df_mb_control,df_da_treatment)
df_results <- merge(df_results,df_ru_treatment)
df_results <- merge(df_results,df_diff_1_exp_control)
df_results <- merge(df_results,df_diff_2_com_control)
df_results <- df_results %>%
arrange(term,order)
df_results
df_results_2 <- df_results %>%
arrange(term,order) %>%
select(-order) %>%
mutate(stars_mb = ifelse(pvalue_mb < .001, yes = "***",
ifelse(pvalue_mb >= .001 & pvalue_mb < .01, yes = "**",
ifelse(pvalue_mb >= .01 & pvalue_mb < .05, yes = "*",
ifelse(pvalue_mb >= .05 & pvalue_mb < .15, yes = "†",
no = "")))),
) %>%
group_by(term) %>%
mutate(MB_Control = ifelse(row_number()==1,
yes = paste0(round(estimate_mb,3),stars_mb),
no = paste0("(",round(estimate_mb,3),")")),
) %>%
ungroup() %>%
mutate(stars_da = ifelse(pvalue_da < .001, yes = "***",
ifelse(pvalue_da >= .001 & pvalue_da < .01, yes = "**",
ifelse(pvalue_da >= .01 & pvalue_da < .05, yes = "*",
ifelse(pvalue_da >= .05 & pvalue_da < .15, yes = "†",
no = "")))),
) %>%
group_by(term) %>%
mutate(Dauphin = ifelse(row_number()==1,
yes = paste0(round(estimate_da,3),stars_da),
no = paste0("(",round(estimate_da,3),")")),
) %>%
ungroup() %>%
mutate(stars_ru = ifelse(pvalue_ru < .001, yes = "***",
ifelse(pvalue_ru >= .001 & pvalue_ru < .01, yes = "**",
ifelse(pvalue_ru >= .01 & pvalue_ru < .05, yes = "*",
ifelse(pvalue_ru >= .05 & pvalue_ru < .15, yes = "†",
no = "")))),
) %>%
group_by(term) %>%
mutate(MB_Treatment = ifelse(row_number()==1,
yes = paste0(round(estimate_ru,3),stars_ru),
no = paste0("(",round(estimate_ru,3),")")),
) %>%
ungroup() %>%
mutate(stars_diff_1_exp = ifelse(pvalue_diff_1_exp < .001, yes = "***",
ifelse(pvalue_diff_1_exp >= .001 & pvalue_diff_1_exp < .01, yes = "**",
ifelse(pvalue_diff_1_exp >= .01 & pvalue_diff_1_exp < .05, yes = "*",
ifelse(pvalue_diff_1_exp >= .05 & pvalue_diff_1_exp < .15, yes = "†",
no = "")))),
) %>%
group_by(term) %>%
mutate(Diff_1_Exp_effect = ifelse(row_number()==1,
yes = paste0(round(estimate_diff_1_exp,3),stars_diff_1_exp),
no = paste0("(",round(estimate_diff_1_exp,3),")")),
) %>%
ungroup() %>%
mutate(stars_diff_2_com = ifelse(pvalue_diff_2_com < .001, yes = "***",
ifelse(pvalue_diff_2_com >= .001 & pvalue_diff_2_com < .01, yes = "**",
ifelse(pvalue_diff_2_com >= .01 & pvalue_diff_2_com < .05, yes = "*",
ifelse(pvalue_diff_2_com >= .05 & pvalue_diff_2_com < .15, yes = "†",
no = "")))),
) %>%
group_by(term) %>%
mutate(Diff_2_Com_effect = ifelse(row_number()==1,
yes = paste0(round(estimate_diff_2_com,3),stars_diff_2_com),
no = paste0("(",round(estimate_diff_2_com,3),")")),
) %>%
ungroup() %>%
select(term, MB_Control, Dauphin, MB_Treatment, Diff_1_Exp_effect, Diff_2_Com_effect)
df_results_2$term <- c("LMP baseline", "", "LMP study period", "", "Change in LMP", "")
colnames(df_results_2) <- c("", "MB Control", "Dauphin", "MB Treatment", "DiD 1", "DiD 2")
cairo_pdf(paste0(tables,"table_3_diff_in_diff.pdf"), family="DejaVu Sans",height=11, width=8.5)
grid.table(df_results_2, rows = NULL)
dev.off()
